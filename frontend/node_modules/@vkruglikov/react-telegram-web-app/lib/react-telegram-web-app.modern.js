import n,{createContext as e,useContext as t,useEffect as o,useId as l,useCallback as r,useState as u,useMemo as i}from"react";var s;const a="undefined"!=typeof window&&null!=(s=window)&&null!=(s=s.Telegram)&&s.WebApp?window.Telegram.WebApp:null,c=e(a),d={smoothButtonsTransition:!1,smoothButtonsTransitionMs:10},m=e(d),v=()=>({MainButton:{current:null},BackButton:{current:null}}),h=e({MainButton:{current:null},BackButton:{current:null}}),p=()=>{},w=({id:n,show:e=p,hide:l=p,currentShowedIdRef:r})=>{const{smoothButtonsTransition:u,smoothButtonsTransitionMs:i}=t(m);o(()=>(e(),r.current=n,()=>{u?(r.current=null,setTimeout(()=>{r.current||l()},i)):(l(),r.current=null)}),[l,n,r,e,u,i])},f=()=>t(c),P=({text:n="CONTINUE",progress:e=!1,disable:r,disabled:u=!1,color:i,textColor:s,onClick:a})=>{const c=t(h),d=l(),m=f(),v=null==m?void 0:m.MainButton,p=null==m?void 0:m.themeParams,P=r||u;return o(()=>{null==v||v.setParams({color:i||(null==p?void 0:p.button_color)||"#fff"})},[i,p,v]),o(()=>{null==v||v.setParams({text_color:s||(null==p?void 0:p.button_text_color)||"#000"})},[v,p,s]),o(()=>{null==v||v.setText(n)},[n,v]),o(()=>{P?null==v||v.disable():P||null==v||v.enable()},[P,v]),o(()=>{e?null==v||v.showProgress(!1):e||null==v||v.hideProgress()},[e,v]),o(()=>{if(a)return null==v||v.onClick(a),()=>{null==v||v.offClick(a)}},[a,v]),w({show:null==v?void 0:v.show,hide:null==v?void 0:v.hide,currentShowedIdRef:c.MainButton,id:d}),null},B=({onClick:n})=>{const e=t(h),r=l(),u=f(),i=null==u?void 0:u.BackButton;return o(()=>{if(n&&i)return i.onClick(n),()=>{i.offClick(n)}},[n,i]),w({show:null==i?void 0:i.show,hide:null==i?void 0:i.hide,currentShowedIdRef:e.BackButton,id:r}),null},g=()=>{const n=f();return r(e=>new Promise((t,o)=>{try{null==n||null==n.showPopup||n.showPopup(e,n=>{t(n)})}catch(n){o(n)}}),[n])},b=()=>{const n=f(),e=null==n?void 0:n.HapticFeedback;return[r((...n)=>null==e?void 0:e.impactOccurred(...n),[e]),r((...n)=>null==e?void 0:e.notificationOccurred(...n),[e]),r((...n)=>null==e?void 0:e.selectionChanged(...n),[e])]},C=()=>{const n=f(),[e,t]=u(null==n?void 0:n.colorScheme),[l,r]=u((null==n?void 0:n.themeParams)||{});return o(()=>{if(!n)return;const e=()=>{t(n.colorScheme),r(n.themeParams)};return n.onEvent("themeChanged",e),()=>{n.offEvent("themeChanged",e)}},[n]),[e,l]},I=()=>{const n=f();return[r((...e)=>null==n||null==n.showScanQrPopup?void 0:n.showScanQrPopup(...e),[n]),r(()=>null==n||null==n.closeScanQrPopup?void 0:n.closeScanQrPopup(),[n])]},T=()=>{const n=f();return r(()=>new Promise(e=>{null==n||null==n.readTextFromClipboard||n.readTextFromClipboard(e)}),[n])},k=()=>{const n=f();return r((...e)=>null==n||null==n.switchInlineQuery?void 0:n.switchInlineQuery(...e),[n])},x=()=>{const n=f(),[e,t]=u(null==n?void 0:n.isExpanded);return o(()=>{if(!n)return;const e=e=>{e.isStateStable&&t(n.isExpanded)};return n.onEvent("viewportChanged",e),()=>n.offEvent("viewportChanged",e)},[n]),[e,r(()=>null==n||null==n.expand?void 0:n.expand(),[n])]},E=()=>{var n;const e=null==(n=f())?void 0:n.CloudStorage,t=r(n=>new Promise((t,o)=>{null==e||e.getItem(n,(n,e)=>{n?o(n):t(e)})}),[e]),o=r((n,t)=>new Promise((o,l)=>{null==e||e.setItem(n,t,(n,e)=>{!n&&e?o():l(n)})}),[e]),l=r(n=>new Promise((t,o)=>{null==e||e.getItems(n,(n,e)=>{!n&&e?t(e):o(n)})}),[e]),u=r(n=>new Promise((t,o)=>{null==e||e.removeItem(n,(n,e)=>{!n&&e?t():o(n)})}),[e]),s=r(n=>new Promise((t,o)=>{null==e||e.removeItems(n,(n,e)=>{!n&&e?t():o(n)})}),[e]),a=r(()=>new Promise((n,t)=>{null==e||e.getKeys((e,o)=>{!e&&o?n(o):t(e)})}),[e]);return i(()=>({getItem:t,setItem:o,getItems:l,removeItem:u,removeItems:s,getKeys:a}),[e])};function S(){return S=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(n[o]=t[o])}return n},S.apply(this,arguments)}const y=({children:e,options:t})=>{const l=i(()=>S({},d,t),[t]),r=i(v,[]);return o(()=>{if(null==t||!t.smoothButtonsTransition)return;const n=()=>{var n,e;null==a||null==(n=a.MainButton)||n.hide(),null==a||null==(e=a.BackButton)||e.hide()};return window.addEventListener("beforeunload",n),()=>window.removeEventListener("beforeunload",n)},[null==t?void 0:t.smoothButtonsTransition]),n.createElement(h.Provider,{value:r},n.createElement(c.Provider,{value:a},n.createElement(m.Provider,{value:l},e)))},M=()=>{const n=f();return[n.initDataUnsafe,n.initData]},O=()=>f();export{B as BackButton,P as MainButton,y as WebAppProvider,E as useCloudStorage,x as useExpand,b as useHapticFeedback,M as useInitData,T as useReadTextFromClipboard,I as useScanQrPopup,g as useShowPopup,k as useSwitchInlineQuery,C as useThemeParams,O as useWebApp};
